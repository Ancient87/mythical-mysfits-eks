{
  "Resources": {
    "mythicaltable33D867A5": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "MysfitId",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "MysfitId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "LawChaos",
            "AttributeType": "S"
          },
          {
            "AttributeName": "GoodEvil",
            "AttributeType": "S"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "LawChaosIndex",
            "KeySchema": [
              {
                "AttributeName": "LawChaos",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "MysfitId",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          },
          {
            "IndexName": "GoodEvilIndex",
            "KeySchema": [
              {
                "AttributeName": "GoodEvil",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "MysfitId",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 5
            }
          }
        ],
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 5,
          "WriteCapacityUnits": 5
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythical_table/Resource"
      }
    },
    "mythicalbucket00734ECC": {
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythical_bucket/Resource"
      }
    },
    "mythicalbucketPolicy9B34B6A0": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "mythicalbucket00734ECC"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Principal": {
                "CanonicalUser": {
                  "Fn::GetAtt": [
                    "spaoaiBA4BFFA6",
                    "S3CanonicalUserId"
                  ]
                }
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "mythicalbucket00734ECC",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "mythicalbucket00734ECC",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythical_bucket/Policy/Resource"
      }
    },
    "spaoaiBA4BFFA6": {
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
      "Properties": {
        "CloudFrontOriginAccessIdentityConfig": {
          "Comment": "SPA CF OAI"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/spaoai/Resource"
      }
    },
    "distCFDistribution81D946B7": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "CustomErrorResponses": [
            {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html"
            },
            {
              "ErrorCachingMinTTL": 0,
              "ErrorCode": 403,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html"
            }
          ],
          "DefaultCacheBehavior": {
            "AllowedMethods": [
              "GET",
              "HEAD"
            ],
            "CachedMethods": [
              "GET",
              "HEAD"
            ],
            "Compress": true,
            "ForwardedValues": {
              "Cookies": {
                "Forward": "none"
              },
              "QueryString": false
            },
            "TargetOriginId": "origin1",
            "ViewerProtocolPolicy": "redirect-to-https"
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": [
            {
              "ConnectionAttempts": 3,
              "ConnectionTimeout": 10,
              "DomainName": {
                "Fn::GetAtt": [
                  "mythicalbucket00734ECC",
                  "RegionalDomainName"
                ]
              },
              "Id": "origin1",
              "S3OriginConfig": {
                "OriginAccessIdentity": {
                  "Fn::Join": [
                    "",
                    [
                      "origin-access-identity/cloudfront/",
                      {
                        "Ref": "spaoaiBA4BFFA6"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "PriceClass": "PriceClass_100",
          "ViewerCertificate": {
            "CloudFrontDefaultCertificate": true
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/dist/CFDistribution"
      }
    },
    "spadeployCustomResourceDA89A796": {
      "Type": "Custom::CDKBucketDeployment",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn"
          ]
        },
        "SourceBucketNames": [
          {
            "Ref": "AssetParameters38dc075d940489781e762900ba41051b2783a51198dfea4e7cd7d7a0e11f0f95S3BucketA8D7D781"
          }
        ],
        "SourceObjectKeys": [
          {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters38dc075d940489781e762900ba41051b2783a51198dfea4e7cd7d7a0e11f0f95S3VersionKey0AF52FFE"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters38dc075d940489781e762900ba41051b2783a51198dfea4e7cd7d7a0e11f0f95S3VersionKey0AF52FFE"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        ],
        "DestinationBucketName": {
          "Ref": "mythicalbucket00734ECC"
        },
        "Prune": true,
        "DistributionId": {
          "Ref": "distCFDistribution81D946B7"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "mythicalstack/spadeploy/CustomResource/Default"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "AssetParameters38dc075d940489781e762900ba41051b2783a51198dfea4e7cd7d7a0e11f0f95S3BucketA8D7D781"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "AssetParameters38dc075d940489781e762900ba41051b2783a51198dfea4e7cd7d7a0e11f0f95S3BucketA8D7D781"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "mythicalbucket00734ECC",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "mythicalbucket00734ECC",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "cloudfront:GetInvalidation",
                "cloudfront:CreateInvalidation"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": [
          {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParameters4184245adc1f2ed71e1f0ae5719f8fd7f34324b750f1bf06b2fb5cf1f4014f50S3BucketB6159468"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4184245adc1f2ed71e1f0ae5719f8fd7f34324b750f1bf06b2fb5cf1f4014f50S3VersionKey2060CAC0"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParameters4184245adc1f2ed71e1f0ae5719f8fd7f34324b750f1bf06b2fb5cf1f4014f50S3VersionKey2060CAC0"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn"
          ]
        },
        "Runtime": "python3.6",
        "Timeout": 900
      },
      "DependsOn": [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265"
      ],
      "Metadata": {
        "aws:cdk:path": "mythicalstack/Custom::CDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C/Resource",
        "aws:asset:path": "asset.4184245adc1f2ed71e1f0ae5719f8fd7f34324b750f1bf06b2fb5cf1f4014f50.zip",
        "aws:asset:property": "Code"
      }
    },
    "mythicalclustervpcA66C39BA": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/Resource"
      }
    },
    "mythicalclustervpcPublicSubnet1SubnetE28C04FA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "mythicalclustervpcA66C39BA"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet1/Subnet"
      }
    },
    "mythicalclustervpcPublicSubnet1RouteTableCB90DBD4": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "mythicalclustervpcA66C39BA"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet1/RouteTable"
      }
    },
    "mythicalclustervpcPublicSubnet1RouteTableAssociationC5174AB7": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalclustervpcPublicSubnet1RouteTableCB90DBD4"
        },
        "SubnetId": {
          "Ref": "mythicalclustervpcPublicSubnet1SubnetE28C04FA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "mythicalclustervpcPublicSubnet1DefaultRoute09837AC2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalclustervpcPublicSubnet1RouteTableCB90DBD4"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "mythicalclustervpcIGW451F5FD9"
        }
      },
      "DependsOn": [
        "mythicalclustervpcVPCGW28C6231E"
      ],
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet1/DefaultRoute"
      }
    },
    "mythicalclustervpcPublicSubnet1EIP5AEA7F15": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet1/EIP"
      }
    },
    "mythicalclustervpcPublicSubnet1NATGateway27D034B9": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "mythicalclustervpcPublicSubnet1EIP5AEA7F15",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "mythicalclustervpcPublicSubnet1SubnetE28C04FA"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet1/NATGateway"
      }
    },
    "mythicalclustervpcPublicSubnet2Subnet6BCDA975": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "mythicalclustervpcA66C39BA"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet2/Subnet"
      }
    },
    "mythicalclustervpcPublicSubnet2RouteTable8B0C3963": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "mythicalclustervpcA66C39BA"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet2/RouteTable"
      }
    },
    "mythicalclustervpcPublicSubnet2RouteTableAssociation4B19B39F": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalclustervpcPublicSubnet2RouteTable8B0C3963"
        },
        "SubnetId": {
          "Ref": "mythicalclustervpcPublicSubnet2Subnet6BCDA975"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "mythicalclustervpcPublicSubnet2DefaultRoute201C5271": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalclustervpcPublicSubnet2RouteTable8B0C3963"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "mythicalclustervpcIGW451F5FD9"
        }
      },
      "DependsOn": [
        "mythicalclustervpcVPCGW28C6231E"
      ],
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet2/DefaultRoute"
      }
    },
    "mythicalclustervpcPublicSubnet2EIP79E9E790": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet2/EIP"
      }
    },
    "mythicalclustervpcPublicSubnet2NATGateway9EB69F57": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "mythicalclustervpcPublicSubnet2EIP79E9E790",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "mythicalclustervpcPublicSubnet2Subnet6BCDA975"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PublicSubnet2/NATGateway"
      }
    },
    "mythicalclustervpcPrivateSubnet1SubnetB21C708A": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "mythicalclustervpcA66C39BA"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PrivateSubnet1/Subnet"
      }
    },
    "mythicalclustervpcPrivateSubnet1RouteTableDDFFE15E": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "mythicalclustervpcA66C39BA"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PrivateSubnet1/RouteTable"
      }
    },
    "mythicalclustervpcPrivateSubnet1RouteTableAssociation52F7C4C0": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalclustervpcPrivateSubnet1RouteTableDDFFE15E"
        },
        "SubnetId": {
          "Ref": "mythicalclustervpcPrivateSubnet1SubnetB21C708A"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "mythicalclustervpcPrivateSubnet1DefaultRoute09D285FA": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalclustervpcPrivateSubnet1RouteTableDDFFE15E"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "mythicalclustervpcPublicSubnet1NATGateway27D034B9"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "mythicalclustervpcPrivateSubnet2SubnetDC82F2CA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "mythicalclustervpcA66C39BA"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PrivateSubnet2/Subnet"
      }
    },
    "mythicalclustervpcPrivateSubnet2RouteTable5AE88421": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "mythicalclustervpcA66C39BA"
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PrivateSubnet2/RouteTable"
      }
    },
    "mythicalclustervpcPrivateSubnet2RouteTableAssociation8DFAEDDE": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalclustervpcPrivateSubnet2RouteTable5AE88421"
        },
        "SubnetId": {
          "Ref": "mythicalclustervpcPrivateSubnet2SubnetDC82F2CA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "mythicalclustervpcPrivateSubnet2DefaultRoute17EF7EF3": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalclustervpcPrivateSubnet2RouteTable5AE88421"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "mythicalclustervpcPublicSubnet2NATGateway9EB69F57"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "mythicalclustervpcIGW451F5FD9": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalclustervpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/IGW"
      }
    },
    "mythicalclustervpcVPCGW28C6231E": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "mythicalclustervpcA66C39BA"
        },
        "InternetGatewayId": {
          "Ref": "mythicalclustervpcIGW451F5FD9"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalclustervpc/VPCGW"
      }
    },
    "mythicalenvironmentvpc2C229CE5": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/Resource"
      }
    },
    "mythicalenvironmentvpcPublicSubnet1Subnet34F021DD": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/18",
        "VpcId": {
          "Ref": "mythicalenvironmentvpc2C229CE5"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet1/Subnet"
      }
    },
    "mythicalenvironmentvpcPublicSubnet1RouteTable3E7B8948": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "mythicalenvironmentvpc2C229CE5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet1/RouteTable"
      }
    },
    "mythicalenvironmentvpcPublicSubnet1RouteTableAssociation5245FDC8": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalenvironmentvpcPublicSubnet1RouteTable3E7B8948"
        },
        "SubnetId": {
          "Ref": "mythicalenvironmentvpcPublicSubnet1Subnet34F021DD"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet1/RouteTableAssociation"
      }
    },
    "mythicalenvironmentvpcPublicSubnet1DefaultRoute754D35EE": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalenvironmentvpcPublicSubnet1RouteTable3E7B8948"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "mythicalenvironmentvpcIGW70661235"
        }
      },
      "DependsOn": [
        "mythicalenvironmentvpcVPCGWF44CB3D0"
      ],
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet1/DefaultRoute"
      }
    },
    "mythicalenvironmentvpcPublicSubnet1EIP45A1E349": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet1/EIP"
      }
    },
    "mythicalenvironmentvpcPublicSubnet1NATGatewayFE43DE07": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "mythicalenvironmentvpcPublicSubnet1EIP45A1E349",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "mythicalenvironmentvpcPublicSubnet1Subnet34F021DD"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PublicSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet1/NATGateway"
      }
    },
    "mythicalenvironmentvpcPublicSubnet2SubnetCC288436": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.64.0/18",
        "VpcId": {
          "Ref": "mythicalenvironmentvpc2C229CE5"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet2/Subnet"
      }
    },
    "mythicalenvironmentvpcPublicSubnet2RouteTableEA8EAFB7": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "mythicalenvironmentvpc2C229CE5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet2/RouteTable"
      }
    },
    "mythicalenvironmentvpcPublicSubnet2RouteTableAssociation31D0AB93": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalenvironmentvpcPublicSubnet2RouteTableEA8EAFB7"
        },
        "SubnetId": {
          "Ref": "mythicalenvironmentvpcPublicSubnet2SubnetCC288436"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet2/RouteTableAssociation"
      }
    },
    "mythicalenvironmentvpcPublicSubnet2DefaultRoute11CBFBB9": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalenvironmentvpcPublicSubnet2RouteTableEA8EAFB7"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "mythicalenvironmentvpcIGW70661235"
        }
      },
      "DependsOn": [
        "mythicalenvironmentvpcVPCGWF44CB3D0"
      ],
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet2/DefaultRoute"
      }
    },
    "mythicalenvironmentvpcPublicSubnet2EIP3AD59B38": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet2/EIP"
      }
    },
    "mythicalenvironmentvpcPublicSubnet2NATGateway89A23646": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "mythicalenvironmentvpcPublicSubnet2EIP3AD59B38",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "mythicalenvironmentvpcPublicSubnet2SubnetCC288436"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PublicSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PublicSubnet2/NATGateway"
      }
    },
    "mythicalenvironmentvpcPrivateSubnet1Subnet33183921": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.128.0/18",
        "VpcId": {
          "Ref": "mythicalenvironmentvpc2C229CE5"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet1/Subnet"
      }
    },
    "mythicalenvironmentvpcPrivateSubnet1RouteTable7F3ADAC8": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "mythicalenvironmentvpc2C229CE5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet1/RouteTable"
      }
    },
    "mythicalenvironmentvpcPrivateSubnet1RouteTableAssociation927E5D46": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalenvironmentvpcPrivateSubnet1RouteTable7F3ADAC8"
        },
        "SubnetId": {
          "Ref": "mythicalenvironmentvpcPrivateSubnet1Subnet33183921"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet1/RouteTableAssociation"
      }
    },
    "mythicalenvironmentvpcPrivateSubnet1DefaultRoute0C4440B3": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalenvironmentvpcPrivateSubnet1RouteTable7F3ADAC8"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "mythicalenvironmentvpcPublicSubnet1NATGatewayFE43DE07"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet1/DefaultRoute"
      }
    },
    "mythicalenvironmentvpcPrivateSubnet2Subnet1DA66930": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.192.0/18",
        "VpcId": {
          "Ref": "mythicalenvironmentvpc2C229CE5"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet2/Subnet"
      }
    },
    "mythicalenvironmentvpcPrivateSubnet2RouteTable13E6EF6A": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "mythicalenvironmentvpc2C229CE5"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet2/RouteTable"
      }
    },
    "mythicalenvironmentvpcPrivateSubnet2RouteTableAssociation73E5D51B": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalenvironmentvpcPrivateSubnet2RouteTable13E6EF6A"
        },
        "SubnetId": {
          "Ref": "mythicalenvironmentvpcPrivateSubnet2Subnet1DA66930"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet2/RouteTableAssociation"
      }
    },
    "mythicalenvironmentvpcPrivateSubnet2DefaultRouteC235AD07": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "mythicalenvironmentvpcPrivateSubnet2RouteTable13E6EF6A"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "mythicalenvironmentvpcPublicSubnet2NATGateway89A23646"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/PrivateSubnet2/DefaultRoute"
      }
    },
    "mythicalenvironmentvpcIGW70661235": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "mythicalstack/mythicalenvironmentvpc"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/IGW"
      }
    },
    "mythicalenvironmentvpcVPCGWF44CB3D0": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "mythicalenvironmentvpc2C229CE5"
        },
        "InternetGatewayId": {
          "Ref": "mythicalenvironmentvpcIGW70661235"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalenvironmentvpc/VPCGW"
      }
    },
    "mythicalenvironment8B109DAE": {
      "Type": "AWS::Cloud9::EnvironmentEC2",
      "Properties": {
        "InstanceType": "t2.micro",
        "Name": "mythical_environment",
        "SubnetId": {
          "Ref": "mythicalenvironmentvpcPublicSubnet1Subnet34F021DD"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythical_environment/Resource"
      }
    },
    "adminroleDBD57144": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/adminrole/Resource"
      }
    },
    "mythicaleksclusterRole7FDBF0E4": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSServicePolicy"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalekscluster/Role/Resource"
      }
    },
    "mythicaleksclusterControlPlaneSecurityGroupB4FBE777": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "mythicalclustervpcA66C39BA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalekscluster/ControlPlaneSecurityGroup/Resource"
      }
    },
    "mythicaleksclusterCreationRole728BD4D5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": [
                  {
                    "Fn::GetAtt": [
                      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                      "Outputs.mythicalstackawscdkawseksClusterResourceProviderOnEventHandlerServiceRoleFC6B8D6FArn"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
                      "Outputs.mythicalstackawscdkawseksClusterResourceProviderIsCompleteHandlerServiceRoleBD3DCA98Arn"
                    ]
                  }
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
                    "Outputs.mythicalstackawscdkawseksKubectlProviderHandlerServiceRole32D7FCCDArn"
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalekscluster/Resource/CreationRole/Resource"
      }
    },
    "mythicaleksclusterCreationRoleDefaultPolicy2FE5F52C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "mythicaleksclusterRole7FDBF0E4",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":eks:ap-southeast-1:",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":cluster/mythical_eks_cluster"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":eks:ap-southeast-1:",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":cluster/mythical_eks_cluster/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":eks:ap-southeast-1:",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":fargateprofile/mythical_eks_cluster/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "iam:GetRole",
                "iam:listAttachedRolePolicies"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "mythicaleksclusterCreationRoleDefaultPolicy2FE5F52C",
        "Roles": [
          {
            "Ref": "mythicaleksclusterCreationRole728BD4D5"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalekscluster/Resource/CreationRole/DefaultPolicy/Resource"
      }
    },
    "mythicalekscluster8E6BEE20": {
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.mythicalstackawscdkawseksClusterResourceProviderframeworkonEventD48AB803Arn"
          ]
        },
        "Config": {
          "name": "mythical_eks_cluster",
          "roleArn": {
            "Fn::GetAtt": [
              "mythicaleksclusterRole7FDBF0E4",
              "Arn"
            ]
          },
          "version": "1.16",
          "resourcesVpcConfig": {
            "securityGroupIds": [
              {
                "Fn::GetAtt": [
                  "mythicaleksclusterControlPlaneSecurityGroupB4FBE777",
                  "GroupId"
                ]
              }
            ],
            "subnetIds": [
              {
                "Ref": "mythicalclustervpcPublicSubnet1SubnetE28C04FA"
              },
              {
                "Ref": "mythicalclustervpcPublicSubnet2Subnet6BCDA975"
              },
              {
                "Ref": "mythicalclustervpcPrivateSubnet1SubnetB21C708A"
              },
              {
                "Ref": "mythicalclustervpcPrivateSubnet2SubnetDC82F2CA"
              }
            ]
          }
        },
        "AssumeRoleArn": {
          "Fn::GetAtt": [
            "mythicaleksclusterCreationRole728BD4D5",
            "Arn"
          ]
        },
        "AttributesRevision": 2
      },
      "DependsOn": [
        "mythicaleksclusterCreationRoleDefaultPolicy2FE5F52C",
        "mythicaleksclusterCreationRole728BD4D5"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalekscluster/Resource/Resource/Default"
      }
    },
    "mythicaleksclusterKubectlReadyBarrier62807F65": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready"
      },
      "DependsOn": [
        "mythicaleksclusterCreationRoleDefaultPolicy2FE5F52C",
        "mythicaleksclusterCreationRole728BD4D5",
        "mythicalekscluster8E6BEE20"
      ],
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalekscluster/KubectlReadyBarrier"
      }
    },
    "mythicaleksclusterAwsAuthmanifest4BC01F70": {
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.mythicalstackawscdkawseksKubectlProviderframeworkonEventB26E91B9Arn"
          ]
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\"},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "adminroleDBD57144",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "adminroleDBD57144",
                  "Arn"
                ]
              },
              "\\\",\\\"groups\\\":[\\\"system:masters\\\"]},{\\\"rolearn\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "mythicaleksnodeNodeGroupRole4F7FCA52",
                  "Arn"
                ]
              },
              "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
            ]
          ]
        },
        "ClusterName": {
          "Ref": "mythicalekscluster8E6BEE20"
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "mythicaleksclusterCreationRole728BD4D5",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "mythicaleksclusterKubectlReadyBarrier62807F65"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicalekscluster/AwsAuth/manifest/Resource/Default"
      }
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.ap-southeast-1.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "AssetParameterscabf9049ebef136161df1c7663e91dd4c8de0e66cd0c281b4f78db6d48d19523S3BucketE1CAE790"
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameterscabf9049ebef136161df1c7663e91dd4c8de0e66cd0c281b4f78db6d48d19523S3VersionKey5249EB19"
                      }
                    ]
                  }
                ]
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameterscabf9049ebef136161df1c7663e91dd4c8de0e66cd0c281b4f78db6d48d19523S3VersionKey5249EB19"
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "Parameters": {
          "referencetomythicalstackAssetParametersfcbdc6836e088c135f093165f26ac77f803a8c9d544b5fbb39e19f8e0d731796S3BucketEAE68767Ref": {
            "Ref": "AssetParametersfcbdc6836e088c135f093165f26ac77f803a8c9d544b5fbb39e19f8e0d731796S3Bucket2C6BE99F"
          },
          "referencetomythicalstackAssetParametersfcbdc6836e088c135f093165f26ac77f803a8c9d544b5fbb39e19f8e0d731796S3VersionKeyD0C64FC7Ref": {
            "Ref": "AssetParametersfcbdc6836e088c135f093165f26ac77f803a8c9d544b5fbb39e19f8e0d731796S3VersionKey4D7F7B64"
          },
          "referencetomythicalstackAssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3BucketD7379004Ref": {
            "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3Bucket9266BA0E"
          },
          "referencetomythicalstackAssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKeyDA1CFAB8Ref": {
            "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKey5B5295A8"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource"
      }
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.ap-southeast-1.",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "AssetParameters457c8b674b9aaaf0cc8594c81e73aaf0b561c486295d99aeee526897ebe314c7S3Bucket2311B041"
              },
              "/",
              {
                "Fn::Select": [
                  0,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters457c8b674b9aaaf0cc8594c81e73aaf0b561c486295d99aeee526897ebe314c7S3VersionKeyE4A58933"
                      }
                    ]
                  }
                ]
              },
              {
                "Fn::Select": [
                  1,
                  {
                    "Fn::Split": [
                      "||",
                      {
                        "Ref": "AssetParameters457c8b674b9aaaf0cc8594c81e73aaf0b561c486295d99aeee526897ebe314c7S3VersionKeyE4A58933"
                      }
                    ]
                  }
                ]
              }
            ]
          ]
        },
        "Parameters": {
          "referencetomythicalstackAssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3BucketDE47F7FARef": {
            "Ref": "AssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3Bucket0EAA682D"
          },
          "referencetomythicalstackAssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3VersionKeyF1FDCF02Ref": {
            "Ref": "AssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3VersionKeyF3400812"
          },
          "referencetomythicalstackAssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3BucketD7379004Ref": {
            "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3Bucket9266BA0E"
          },
          "referencetomythicalstackAssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKeyDA1CFAB8Ref": {
            "Ref": "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKey5B5295A8"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource"
      }
    },
    "mythicaleksnodeNodeGroupRole4F7FCA52": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicaleksnode/NodeGroupRole/Resource"
      }
    },
    "mythicaleksnodeNodeGroupRoleDefaultPolicyF5EDDE2E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "monolithDEBCB820",
                  "Arn"
                ]
              }
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "like10BE6EAE",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "mythicaleksnodeNodeGroupRoleDefaultPolicyF5EDDE2E",
        "Roles": [
          {
            "Ref": "mythicaleksnodeNodeGroupRole4F7FCA52"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicaleksnode/NodeGroupRole/DefaultPolicy/Resource"
      }
    },
    "mythicaleksnode7234B045": {
      "Type": "AWS::EKS::Nodegroup",
      "Properties": {
        "ClusterName": {
          "Ref": "mythicalekscluster8E6BEE20"
        },
        "NodeRole": {
          "Fn::GetAtt": [
            "mythicaleksnodeNodeGroupRole4F7FCA52",
            "Arn"
          ]
        },
        "Subnets": [
          {
            "Ref": "mythicalclustervpcPublicSubnet1SubnetE28C04FA"
          },
          {
            "Ref": "mythicalclustervpcPublicSubnet2Subnet6BCDA975"
          }
        ],
        "ForceUpdateEnabled": true,
        "ScalingConfig": {
          "DesiredSize": 2,
          "MaxSize": 2,
          "MinSize": 1
        }
      },
      "Metadata": {
        "aws:cdk:path": "mythicalstack/mythicaleksnode/Resource"
      }
    },
    "monolithDEBCB820": {
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "mythicalstack/monolith/Resource"
      }
    },
    "like10BE6EAE": {
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "mythicalstack/like/Resource"
      }
    }
  },
  "Outputs": {
    "mythicaltableoutput": {
      "Value": {
        "Ref": "mythicaltable33D867A5"
      },
      "Export": {
        "Name": "MythicalTable"
      }
    },
    "mythicalbucketwebsite": {
      "Value": {
        "Fn::GetAtt": [
          "distCFDistribution81D946B7",
          "DomainName"
        ]
      },
      "Export": {
        "Name": "S3WebsiteURL"
      }
    },
    "mythicaleksclusterConfigCommand8881EF53": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks update-kubeconfig --name ",
            {
              "Ref": "mythicalekscluster8E6BEE20"
            },
            " --region ap-southeast-1 --role-arn ",
            {
              "Fn::GetAtt": [
                "adminroleDBD57144",
                "Arn"
              ]
            }
          ]
        ]
      }
    },
    "mythicaleksclusterGetTokenCommand8AC04779": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks get-token --cluster-name ",
            {
              "Ref": "mythicalekscluster8E6BEE20"
            },
            " --region ap-southeast-1 --role-arn ",
            {
              "Fn::GetAtt": [
                "adminroleDBD57144",
                "Arn"
              ]
            }
          ]
        ]
      }
    },
    "mythicalekscluster": {
      "Value": {
        "Ref": "mythicalekscluster8E6BEE20"
      },
      "Export": {
        "Name": "mythical-eks-cluster"
      }
    },
    "monolithrepository": {
      "Value": {
        "Fn::Join": [
          "",
          [
            {
              "Fn::Select": [
                4,
                {
                  "Fn::Split": [
                    ":",
                    {
                      "Fn::GetAtt": [
                        "monolithDEBCB820",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            },
            ".dkr.ecr.",
            {
              "Fn::Select": [
                3,
                {
                  "Fn::Split": [
                    ":",
                    {
                      "Fn::GetAtt": [
                        "monolithDEBCB820",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "monolithDEBCB820"
            }
          ]
        ]
      },
      "Export": {
        "Name": "mythical-monolith-repository"
      }
    },
    "likerepository": {
      "Value": {
        "Fn::Join": [
          "",
          [
            {
              "Fn::Select": [
                4,
                {
                  "Fn::Split": [
                    ":",
                    {
                      "Fn::GetAtt": [
                        "like10BE6EAE",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            },
            ".dkr.ecr.",
            {
              "Fn::Select": [
                3,
                {
                  "Fn::Split": [
                    ":",
                    {
                      "Fn::GetAtt": [
                        "like10BE6EAE",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "like10BE6EAE"
            }
          ]
        ]
      },
      "Export": {
        "Name": "mythical-like-repository"
      }
    }
  },
  "Parameters": {
    "AssetParameters4184245adc1f2ed71e1f0ae5719f8fd7f34324b750f1bf06b2fb5cf1f4014f50S3BucketB6159468": {
      "Type": "String",
      "Description": "S3 bucket for asset \"4184245adc1f2ed71e1f0ae5719f8fd7f34324b750f1bf06b2fb5cf1f4014f50\""
    },
    "AssetParameters4184245adc1f2ed71e1f0ae5719f8fd7f34324b750f1bf06b2fb5cf1f4014f50S3VersionKey2060CAC0": {
      "Type": "String",
      "Description": "S3 key for asset version \"4184245adc1f2ed71e1f0ae5719f8fd7f34324b750f1bf06b2fb5cf1f4014f50\""
    },
    "AssetParameters4184245adc1f2ed71e1f0ae5719f8fd7f34324b750f1bf06b2fb5cf1f4014f50ArtifactHash846130E4": {
      "Type": "String",
      "Description": "Artifact hash for asset \"4184245adc1f2ed71e1f0ae5719f8fd7f34324b750f1bf06b2fb5cf1f4014f50\""
    },
    "AssetParameters38dc075d940489781e762900ba41051b2783a51198dfea4e7cd7d7a0e11f0f95S3BucketA8D7D781": {
      "Type": "String",
      "Description": "S3 bucket for asset \"38dc075d940489781e762900ba41051b2783a51198dfea4e7cd7d7a0e11f0f95\""
    },
    "AssetParameters38dc075d940489781e762900ba41051b2783a51198dfea4e7cd7d7a0e11f0f95S3VersionKey0AF52FFE": {
      "Type": "String",
      "Description": "S3 key for asset version \"38dc075d940489781e762900ba41051b2783a51198dfea4e7cd7d7a0e11f0f95\""
    },
    "AssetParameters38dc075d940489781e762900ba41051b2783a51198dfea4e7cd7d7a0e11f0f95ArtifactHash26F61CC5": {
      "Type": "String",
      "Description": "Artifact hash for asset \"38dc075d940489781e762900ba41051b2783a51198dfea4e7cd7d7a0e11f0f95\""
    },
    "AssetParametersfcbdc6836e088c135f093165f26ac77f803a8c9d544b5fbb39e19f8e0d731796S3Bucket2C6BE99F": {
      "Type": "String",
      "Description": "S3 bucket for asset \"fcbdc6836e088c135f093165f26ac77f803a8c9d544b5fbb39e19f8e0d731796\""
    },
    "AssetParametersfcbdc6836e088c135f093165f26ac77f803a8c9d544b5fbb39e19f8e0d731796S3VersionKey4D7F7B64": {
      "Type": "String",
      "Description": "S3 key for asset version \"fcbdc6836e088c135f093165f26ac77f803a8c9d544b5fbb39e19f8e0d731796\""
    },
    "AssetParametersfcbdc6836e088c135f093165f26ac77f803a8c9d544b5fbb39e19f8e0d731796ArtifactHash92C025A4": {
      "Type": "String",
      "Description": "Artifact hash for asset \"fcbdc6836e088c135f093165f26ac77f803a8c9d544b5fbb39e19f8e0d731796\""
    },
    "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3Bucket9266BA0E": {
      "Type": "String",
      "Description": "S3 bucket for asset \"c82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5aff\""
    },
    "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affS3VersionKey5B5295A8": {
      "Type": "String",
      "Description": "S3 key for asset version \"c82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5aff\""
    },
    "AssetParametersc82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5affArtifactHash3453F7BF": {
      "Type": "String",
      "Description": "Artifact hash for asset \"c82ab631133fcbacba75e34003554476abe4d086d477fe4dc9c98fb25a6e5aff\""
    },
    "AssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3Bucket0EAA682D": {
      "Type": "String",
      "Description": "S3 bucket for asset \"2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050\""
    },
    "AssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050S3VersionKeyF3400812": {
      "Type": "String",
      "Description": "S3 key for asset version \"2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050\""
    },
    "AssetParameters2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050ArtifactHashF4CEE19F": {
      "Type": "String",
      "Description": "Artifact hash for asset \"2d65340a9414c04d1844e421bd328aa3b80015d6a02e74afe9a222168b2ba050\""
    },
    "AssetParameterscabf9049ebef136161df1c7663e91dd4c8de0e66cd0c281b4f78db6d48d19523S3BucketE1CAE790": {
      "Type": "String",
      "Description": "S3 bucket for asset \"cabf9049ebef136161df1c7663e91dd4c8de0e66cd0c281b4f78db6d48d19523\""
    },
    "AssetParameterscabf9049ebef136161df1c7663e91dd4c8de0e66cd0c281b4f78db6d48d19523S3VersionKey5249EB19": {
      "Type": "String",
      "Description": "S3 key for asset version \"cabf9049ebef136161df1c7663e91dd4c8de0e66cd0c281b4f78db6d48d19523\""
    },
    "AssetParameterscabf9049ebef136161df1c7663e91dd4c8de0e66cd0c281b4f78db6d48d19523ArtifactHash1A19DD10": {
      "Type": "String",
      "Description": "Artifact hash for asset \"cabf9049ebef136161df1c7663e91dd4c8de0e66cd0c281b4f78db6d48d19523\""
    },
    "AssetParameters457c8b674b9aaaf0cc8594c81e73aaf0b561c486295d99aeee526897ebe314c7S3Bucket2311B041": {
      "Type": "String",
      "Description": "S3 bucket for asset \"457c8b674b9aaaf0cc8594c81e73aaf0b561c486295d99aeee526897ebe314c7\""
    },
    "AssetParameters457c8b674b9aaaf0cc8594c81e73aaf0b561c486295d99aeee526897ebe314c7S3VersionKeyE4A58933": {
      "Type": "String",
      "Description": "S3 key for asset version \"457c8b674b9aaaf0cc8594c81e73aaf0b561c486295d99aeee526897ebe314c7\""
    },
    "AssetParameters457c8b674b9aaaf0cc8594c81e73aaf0b561c486295d99aeee526897ebe314c7ArtifactHashEAFDF607": {
      "Type": "String",
      "Description": "Artifact hash for asset \"457c8b674b9aaaf0cc8594c81e73aaf0b561c486295d99aeee526897ebe314c7\""
    }
  }
}